class Solution {
    static class Pair implements Comparable<Pair>
    {
        int value;
        int index;
        public Pair(int index,int value)
        {
            this.value = value;
            this.index = index;
        }
        @Override
        public int compareTo(Pair p2)
        {
            // for decending
            return p2.value-this.value;
        }
        
        
    }
    public int[] maxSlidingWindow(int[] nums, int k) {
        PriorityQueue<Pair> pq  = new PriorityQueue<>();
        int n = nums.length;
        int ans[] = new int[n-k+1];
        for(int i=0;i<k;i++)
        {
            pq.add(new Pair(i,nums[i]));
        }
        ans[0] = pq.peek().value;
        for(int i = k ;i<n;i++)
        {
            while(pq.size()>0 && pq.peek().index<=(i-k)){pq.remove();}
            pq.add(new Pair(i,nums[i]));
            ans[i-k+1] = pq.peek().value;
            
            
            
          }
        return ans;
        
        
        
    }
}
